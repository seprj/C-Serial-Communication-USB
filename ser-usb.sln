        "using System;\n",
        "using System.Collections.Generic;\n",
        "using System.ComponentModel;\n",
        "using System.Data;\n",
        "using System.Drawing;\n",
        "using System.Linq;\n",
        "using System.Text;\n",
        "using System.Threading;\n",
        "using System.Threading.Tasks;\n",
        "using System.Windows.Forms;\n",
        "using System.IO.Ports;\n",
        "using static System.Windows.Forms.VisualStyles.VisualStyleElement;\n",
        "using System.Linq.Expressions;\n",
        "\n",
        "namespace serial\n",
        "{\n",
        "    public partial class Form1 : Form\n",
        "    {\n",
        "        byte[] bt = new byte[10];\n",
        "        public Form1()\n",
        "        {\n",
        "            InitializeComponent();\n",
        "            getAvailablePorts();\n",
        "        }\n",
        "\n",
        "        void getAvailablePorts()\n",
        "        {\n",
        "            //Get all ports\n",
        "            string[] ports = SerialPort.GetPortNames();\n",
        "            comboBox1.Items.AddRange(ports);\n",
        "            comboBox1.SelectedIndex = 0;\n",
        "            button4.Enabled = false;\n",
        "\n",
        "        }\n",
        "\n",
        "        private void button3_Click(object sender, EventArgs e)\n",
        "        {\n",
        "            try\n",
        "            {\n",
        "\n",
        "\n",
        "                if (comboBox1.Text == \"\" || comboBox2.Text == \"\")\n",
        "                {\n",
        "                    textBox2.Text = \"Please select appropriate setting\";\n",
        "                }\n",
        "\n",
        "                else\n",
        "                {\n",
        "                    //open port\n",
        "\n",
        "                    serialPort1.PortName = comboBox1.Text;\n",
        "                    serialPort1.Open();\n",
        "                    serialPort1.BaudRate = Convert.ToInt32(comboBox2.Text);\n",
        "                    progressBar1.Value = 100;\n",
        "                    button1.Enabled = true;\n",
        "                    button2.Enabled = true;\n",
        "                    textBox1.Enabled = true;\n",
        "                    button3.Enabled = false;\n",
        "                    button4.Enabled = true;\n",
        "                }\n",
        "\n",
        "            }\n",
        "\n",
        "            catch (UnauthorizedAccessException)\n",
        "            {\n",
        "                textBox2.Text = \"Unauthorized Access\";\n",
        "            }\n",
        "\n",
        "\n",
        "        }\n",
        "\n",
        "        private void button4_Click(object sender, EventArgs e)\n",
        "        {\n",
        "\n",
        "            progressBar1.Value = 0;\n",
        "            button1.Enabled = false;\n",
        "            button2.Enabled = false;\n",
        "            button3.Enabled = true;\n",
        "            button4.Enabled = false ;\n",
        "            textBox1.Enabled = true;\n",
        "\n",
        "            try\n",
        "            {\n",
        "                serialPort1.Close();\n",
        "            }\n",
        "\n",
        "            catch (Exception ex)\n",
        "            {\n",
        "                MessageBox.Show(ex.Message, \"Message\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n",
        "            }\n",
        "\n",
        "        }\n",
        "\n",
        "        private void button1_Click(object sender, EventArgs e)\n",
        "        {\n",
        "\n",
        "            //send text to port\n",
        "            try {\n",
        "            // serialPort1.WriteLine(textBox1.Text);\n",
        "            //textBox1.Text = \"\";\n",
        "\n",
        "                    if (serialPort1.IsOpen)\n",
        "                    {\n",
        "                        serialPort1.WriteLine(textBox1.Text + Environment.NewLine);\n",
        "                        textBox1.Clear();\n",
        "\n",
        "                    }\n",
        "\n",
        "                 }\n",
        "\n",
        "            catch (Exception ex)\n",
        "            {\n",
        "                MessageBox.Show(ex.Message, \"Message\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n",
        "            }\n",
        "        }\n",
        "\n",
        "        private void button2_Click(object sender, EventArgs e)\n",
        "        {\n",
        "            //read text serial port\n",
        "            try {\n",
        "\n",
        "                // if (serialPort1.IsOpen)\n",
        "                // {\n",
        "                // textBox2.Text = serialPort1.ReadExisting();\n",
        "                // }\n",
        "                if (serialPort1.IsOpen == false)\n",
        "                {\n",
        "                    serialPort1.PortName = comboBox1.Text;\n",
        "                    serialPort1.Open();\n",
        "                    button2.Text = \"close\";\n",
        "\n",
        "\n",
        "                }\n",
        "\n",
        "                else\n",
        "                {\n",
        "                    serialPort1.Close();\n",
        "                    button2.Text = \"open\";\n",
        "\n",
        "\n",
        "                }\n",
        "\n",
        "            }\n",
        "            catch (Exception ex)\n",
        "            {\n",
        "                MessageBox.Show(ex.Message, \"Message\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n",
        "            }\n",
        "\n",
        "        }\n",
        "\n",
        "        private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)\n",
        "        {\n",
        "\n",
        "            //string data = serialPort1.ReadExisting();\n",
        "\n",
        "            serialPort1.Read(bt, 0, 10);\n",
        "            string s = \" \";\n",
        "            for (int i = 0; i < 10; i++)\n",
        "            \t{\n",
        "             \t\t s = s + bt[i].ToString();\n",
        "             \t}\n",
        "            this.Invoke((MethodInvoker)delegate ()\n",
        "              {\n",
        "\n",
        "                 textBox2.Text = textBox2.Text + \"-\" + s;\n",
        "                 textBox2.Text = textBox2.Text + \"/\" + s;\n",
        "\n",
        "          \t   }\n",
        "          );\n",
        "        \t   serialPort1.DiscardInBuffer();\n",
        "\n",
        "        }\n",
        "\n",
        "        private void serialPort1_ErrorReceived(object sender, SerialErrorReceivedEventArgs e)\n",
        "        {\n",
        "            MessageBox.Show(\"Serial port error : + e.EventType \");\n",
        "        }\n",
        "\n",
        "        private void Form1_Load(object sender, EventArgs e)\n",
        "        {\n",
        "\n",
        "        }\n",
        "\n",
        "    }\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "  }\n",
        "\n"
      ]
    }
  ]
}
